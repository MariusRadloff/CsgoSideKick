// <auto-generated />
using LinqDataAccessLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace LinqDataAccessLibrary.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20171231015838_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("LinqDataAccessLibrary.actionsItem", b =>
                {
                    b.Property<int>("actionsItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("link");

                    b.Property<string>("name");

                    b.Property<int>("rgDescriptionsItemId");

                    b.HasKey("actionsItemId");

                    b.HasIndex("rgDescriptionsItemId");

                    b.ToTable("actions");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.app_dataItem", b =>
                {
                    b.Property<int>("app_dataItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("def_index");

                    b.Property<int>("descriptionsItemId");

                    b.Property<string>("is_itemset_name");

                    b.Property<long>("limited");

                    b.HasKey("app_dataItemId");

                    b.HasIndex("descriptionsItemId");

                    b.ToTable("app_data");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.csgoInventoryItem", b =>
                {
                    b.Property<int>("csgoInventoryItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("gameId");

                    b.Property<bool>("more");

                    b.Property<bool>("more_start");

                    b.Property<bool?>("success");

                    b.HasKey("csgoInventoryItemId");

                    b.ToTable("csgoInventory");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.descriptionsItem", b =>
                {
                    b.Property<int>("descriptionsItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("color");

                    b.Property<int>("rgDescriptionsId");

                    b.Property<int?>("rgDescriptionsItemId");

                    b.Property<string>("type");

                    b.Property<string>("value");

                    b.HasKey("descriptionsItemId");

                    b.HasIndex("rgDescriptionsItemId");

                    b.ToTable("descriptions");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.market_actionsItem", b =>
                {
                    b.Property<int>("market_actionsItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("link");

                    b.Property<string>("name");

                    b.Property<int>("rgDescriptionsItemId");

                    b.HasKey("market_actionsItemId");

                    b.HasIndex("rgDescriptionsItemId");

                    b.ToTable("market_actions");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgCurrencyItem", b =>
                {
                    b.Property<int>("rgCurrencyItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("csgoInventoryItemId");

                    b.HasKey("rgCurrencyItemId");

                    b.HasIndex("csgoInventoryItemId");

                    b.ToTable("rgCurrency");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgDescriptionsItem", b =>
                {
                    b.Property<int>("rgDescriptionsItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("appid");

                    b.Property<string>("background_color");

                    b.Property<string>("classid");

                    b.Property<int>("commodity");

                    b.Property<int>("csgoInventoryItemId");

                    b.Property<string>("icon_drag_url");

                    b.Property<string>("icon_url");

                    b.Property<string>("icon_url_large");

                    b.Property<string>("instanceid");

                    b.Property<string>("market_hast_name");

                    b.Property<string>("market_name");

                    b.Property<string>("market_tradable_restriction");

                    b.Property<int>("marketable");

                    b.Property<string>("name");

                    b.Property<string>("name_color");

                    b.Property<int>("tradable");

                    b.Property<string>("type");

                    b.HasKey("rgDescriptionsItemId");

                    b.HasIndex("csgoInventoryItemId");

                    b.ToTable("rgDescriptions");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgInventoryItem", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("amount");

                    b.Property<string>("classid");

                    b.Property<int>("csgoInventoryItemId");

                    b.Property<string>("instanceid");

                    b.Property<int>("pos");

                    b.Property<int>("rgInventoryItemId");

                    b.HasKey("id");

                    b.HasIndex("csgoInventoryItemId");

                    b.ToTable("rgInventory");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.tagsItem", b =>
                {
                    b.Property<int>("tagsItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("category");

                    b.Property<string>("category_name");

                    b.Property<string>("color");

                    b.Property<string>("internal_name");

                    b.Property<string>("name");

                    b.Property<int>("rgDescriptionsItemId");

                    b.HasKey("tagsItemId");

                    b.HasIndex("rgDescriptionsItemId");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.actionsItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.rgDescriptionsItem", "rgDescriptionsItem")
                        .WithMany("actions")
                        .HasForeignKey("rgDescriptionsItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.app_dataItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.descriptionsItem", "descriptionsItem")
                        .WithMany()
                        .HasForeignKey("descriptionsItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.descriptionsItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.rgDescriptionsItem", "rgDescriptionsItem")
                        .WithMany("descriptions")
                        .HasForeignKey("rgDescriptionsItemId");
                });

            modelBuilder.Entity("LinqDataAccessLibrary.market_actionsItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.rgDescriptionsItem", "rgDescriptionsItem")
                        .WithMany("market_actions")
                        .HasForeignKey("rgDescriptionsItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgCurrencyItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.csgoInventoryItem", "csgoInventoryItem")
                        .WithMany("rgCurrency")
                        .HasForeignKey("csgoInventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgDescriptionsItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.csgoInventoryItem", "csgoInventoryItem")
                        .WithMany("rgDescriptions")
                        .HasForeignKey("csgoInventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.rgInventoryItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.csgoInventoryItem", "csgoInventoryItem")
                        .WithMany("rgInventory")
                        .HasForeignKey("csgoInventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LinqDataAccessLibrary.tagsItem", b =>
                {
                    b.HasOne("LinqDataAccessLibrary.rgDescriptionsItem", "rgDescriptionsItem")
                        .WithMany("tags")
                        .HasForeignKey("rgDescriptionsItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
